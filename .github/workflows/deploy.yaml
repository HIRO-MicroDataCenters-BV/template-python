name: Deploy latest version to AWS K8s

on:
  workflow_run:
    workflows: [pages-build-deployment]
    types:
      - completed

env:
  CHART_NAME: app
  RELEASE_NAME: my-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Install Helm
      uses: azure/setup-helm@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{secrets.AWS_REGION}}

    - name: Update kube config
      run: |
        aws eks update-kubeconfig --role-arn ${{ secrets.EKS_CLUSTER_ROLE_ARN }} --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
        kubectl config set-context --current --namespace=${{ secrets.EKS_CLUSTER_NAMESPACE }}

    - name: Add and update Helm repo
      run: |
        helm repo add myrepo ${{ secrets.HELM_REPO_URL }}
        helm repo update myrepo

    - name: Get lstest chart version
      run: |
        CHART_VERSION=$(helm search repo "myrepo/$CHART_NAME"  | grep "myrepo/$CHART_NAME" | awk '{print $2}')
        echo "CHART_VERSION=$CHART_VERSION"
        if [ -z "$CHART_VERSION" ]; then
          echo "Helm chart version not found"
          exit 1
        else
          echo "CHART_VERSION=$VERSION" >> $GITHUB_ENV
        fi

    - name: Deploy to AWS K8s
      run: helm upgrade --install "$RELEASE_NAME" "myrepo/$CHART_NAME" --version="$CHART_VERSION"
